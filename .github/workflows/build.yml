name: build
on: [push]
jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4

      - id: cache-key
        run: echo "key=$(git log --pretty=tformat:"%H" -n1 $GITHUB_WORKSPACE/.github)" >> "$GITHUB_OUTPUT"

      - id: cache-deps
        uses: actions/cache@v3
        with:
          key: ${{ matrix.os }}-build-${{ steps.cache-key.outputs.key }}
          path: |
            .deps
            "$ANDROID_NDK_HOME/21.4.7075529"

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' && matrix.os == 'macos-latest' }}
        name: tap-protocol dependencies & Flutter (Mac)
        run: |
          mkdir -p .deps
          brew install autoconf automake libtool
          curl -o flutter.zip https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_3.7.12-stable.zip
          unzip flutter.zip -d .deps/

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' && matrix.os == 'ubuntu-latest' }}
        name: tap-protocol dependencies & Flutter (Linux)
        run: |
          mkdir -p .deps
          sudo apt install autoconf automake clang libtool make
          curl -o flutter.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.7.12-stable.tar.xz
          tar -C .deps/ -xvf flutter.tar.xz
          
      - name: Setup Flutter
        run: |
          export PATH="$(pwd)/.deps/flutter/bin:$PATH"
          flutter config --no-analytics
          flutter doctor
          echo "PATH=$PATH" >> "$GITHUB_ENV"

      - name: Fix Java
        run: echo "JAVA_HOME=$JAVA_HOME_17_X64" >> "$GITHUB_ENV"

      - name: Build AAR
        run: |
          flutter pub get
          flutter build aar

      - name: Build example APK
        run: | 
          cd example
          flutter pub get
          flutter build apk --debug
          flutter build apk --profile
          flutter build apk --release