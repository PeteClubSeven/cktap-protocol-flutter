name: build
on: [push]
jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        flutter: ["3.7.12", "3.16.7"]           # Flutter 3.7.12 is to maintain Breez suport
        ndk: ["21.4.7075529", "26.1.10909125"]  # NDK 21.4 is to maintain Breez support
    runs-on: ${{matrix.os}}
    env:
      FLUTTER_VERSION: ${{ matrix.flutter }}
      NDK_VERSION: ${{ matrix.ndk }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        run: echo "JAVA_HOME=$JAVA_HOME_17_X64" >> "$GITHUB_ENV"

      - id: cache-deps
        uses: actions/cache@v3
        with:
          key: ${{ matrix.os }}-build-${{ matrix.flutter }}-${{ matrix.ndk }}-${{ hashFiles('**/pubspec.yaml', '**/pubspec.lock') }}
          path: |
            "$ANDROID_HOME/ndk/$NDK_VERSION"
            .deps

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        name: Install NDK
        run: echo "y" | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" "ndk;$NDK_VERSION"

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' && matrix.os == 'macos-latest' }}
        name: Download & extract Flutter (Mac)
        run: |
          mkdir -p .deps
          curl -o flutter.zip https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_$FLUTTER_VERSION-stable.zip
          unzip flutter.zip -d .deps/

      - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' && matrix.os == 'ubuntu-latest' }}
        name: Download & extract Flutter (Linux)
        run: |
          mkdir -p .deps
          curl -o flutter.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_$FLUTTER_VERSION-stable.tar.xz
          tar -C .deps/ -xvf flutter.tar.xz

      #- if: ${{ matrix.os == 'macos-latest' }}
        #name: Install secp256k1 dependencies (Mac)
        #run: brew install autoconf automake cmake coreutils libtool

      #- if: ${{ matrix.os == 'ubuntu-latest' }}
        #name: Install secp256k1 dependencies (Linux)
        #run: sudo apt install autoconf automake gcc libtool make

      - name: Set up Flutter
        run: |
          export PATH="$(pwd)/.deps/flutter/bin:$PATH"
          export PUB_CACHE="$(pwd)/.deps/pub_cache"
          flutter config --no-analytics
          flutter doctor
          flutter pub get
          cd example
          flutter pub get
          echo "PATH=$PATH" >> "$GITHUB_ENV"
          echo "PUB_CACHE=$PUB_CACHE" >> "$GITHUB_ENV"

      - if: ${{ matrix.os == 'macos-latest' }}
        name: Build iOS frameworks
        continue-on-error: true
        run: |
          cd example
          flutter build ios-framework

      - if: ${{ matrix.os == 'macos-latest' }}
        name: Build iOS example
        continue-on-error: true
        run: |
          cd example
          flutter build ios

      - name: Build Android plugin
        run: |
          flutter build aar

      - name: Build Android example
        run: |
          cd example
          flutter build apk --debug
          flutter build apk --profile
          flutter build apk --release
